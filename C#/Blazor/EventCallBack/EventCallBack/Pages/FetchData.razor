
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>
@if (seSumo == false)
{

    @if (forecasts == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>

    }

}
    <button class="btn btn-info" onclick="@SumaUno">Suma un grado</button>


@code {
    private WeatherForecast[]? forecasts;

    private bool seSumo = false;

    [Parameter]
    public EventCallback<WeatherForecast[]> SettearValores { get; set; }


    public void SumaUno()
    {
        foreach (var item in forecasts)
        {
            item.TemperatureC += 1;
        }   
        SettearValores.InvokeAsync(forecasts);
        seSumo = true;
    }


    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }  
        public string? Summary { get; set; }


    }
}
