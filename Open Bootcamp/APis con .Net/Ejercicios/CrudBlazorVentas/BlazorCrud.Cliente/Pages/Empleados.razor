@page "/Empleados"

@using BlazorCrudShared;
@using BlazorCrud.Cliente.Service;
@using CurrieTechnologies.Razor.SweetAlert2;

@inject SweetAlertService Swal;
@inject IEmpleadoService empleadoService;

<h3>Empleados</h3>

<!-- Este botón te dirige a la page Empleado (en singular)--> 
<a class="btn btn-success btn-sm mb-3" href="Empleado">Nuevo Empleado</a>

<table class="table">
    <thead>
        <tr>
            <th>Nombre Completo</th>
            <th>Departamento</th>
            <th>Sueldo</th>
            <th>Fecha de contrato</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (listaEmpleados == null)
        {
            <tr>
                <td colspan="5" align="center">
                    <img style="width:50px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif">
                </td>
            </tr>
        }
        else
        {
            @foreach (var item in listaEmpleados)
            {
                <tr>
                    <td>@item.NombreCompleto </td>
                    <td>@item.Departamento!.Nombre </td>
                    <td>@item.Sueldo </td>
                    <td>@item.FechaContrato.ToString("dd/MM/yyyy") </td>                  
                    <td>
                        <a class="btn btn-primary btn-sm" href="Empleado/@item.IdEmpleado">
                            <i class="oi oi-pencil"></i>
                        </a>
                        <!-- Son 2 botones, pero solo el 2° es button. Porque el primero te redirige a otra page -->
                        <button type="button"  class="btn btn-danger btn-sm ms-2" @onclick="(() => Eliminar(item.IdEmpleado))"> 
                            <i class="oi oi-trash"></i>    
                        </button>
                    </td>
                </tr>                
            }            
        }
    </tbody>
</table>
@code {
    List<EmpleadoDTO>? listaEmpleados = null;

    protected override async Task OnInitializedAsync()
    {
        listaEmpleados = await empleadoService.Lista();
    }

    private async Task Eliminar(int id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar empleado",
                Text = "¿Deseas eliminar el empleado seleccionado?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });
        if (resultado.IsConfirmed)
        {
            var eliminado = await empleadoService.Eliminar(id);
            if (eliminado)
            {
                //Acá omite llamar al servicio, mostrando simplemente la lista, sin el elemento recientemente eliminado.
                listaEmpleados = listaEmpleados!.FindAll(e => e.IdEmpleado != id);
            }

        }
    }

}
